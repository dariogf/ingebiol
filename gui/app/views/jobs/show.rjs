# render joblist

res_elems = []

res_files = ''
res_files_values = ''
res_command = ''

final_results = @command.get_final_results(session[:user_email],session[:current_job_id])

# for each param
final_results['params'].each do |fr|
     
  elem = {}
  elem['id'] = fr['id']
  elem['type'] = fr['type']
  
     
  # add files
  if fr['type']=='file'
    # show only fixed files or files with valid size
    if fr['fixed'] or !(fr['size']=='0KB' or fr['size'].blank?)
      res = '<table><tr>'
      # resFiles += "<td>#{fr['type']}</td>"
      res += "<td>&nbsp;</td>"
  
      res += "<td>"+ link_to(image_tag("save.gif", {:alt=>'download',:border => '0'})+ fr['title'] ,:controller => 'downloads', :action => 'download', :id => "#{fr['file']}")+'<div id="'+fr['file']+'_div"></div></td>'
  
      res += "<td>(#{fr['size']})</td>"
  
      res += '</tr></table>'
      
      res_files += res
      
      elem['html_value'] = res
    end
  end
  
  
  if fr['type']=='file_value'
    res = '<table><tr>'
    # res += "<td>#{fr['type']}</td>"
    res += "<td>&nbsp;</td>"
  
    # res += '<td></td>'
  
    res += "<td>#{fr['title']}:</td>"
    res += "<td>#{fr['value']}</td>"
    
    res += '</tr></table>'
    
    res_files_values += res
    elem['html_value'] = res
  end


  if fr['type']=='command_output'
    res = '<table><tr>'
    # resFiles += "<td>#{fr['type']}</td>"
    res += "<td>&nbsp;</td>"
  
    # resFiles += '<td></td>'
  
    res += "<td>#{fr['title']}:</td>"
    res += "<td>#{fr['value']}</td>"
    
  
    res += '</tr></table>'
    res_command += res
    elem['html_value'] = res
  end
  
  if fr['type']=='table_from_json'
    res = '<table><tr>'
    # resFiles += "<td>#{fr['type']}</td>"
    res += '<td colspan="3">'
    
    res += '<table>'
    
    res += '<tr>'
    
    if !fr['columns'].nil?
      fr['columns'].each do |title|
    
        res += '<th>'
        res += title['title']
        res += '</th>'
      end
    end
    
    res += '</tr>'
    
    #puts "values:"+fr['value'].to_pretty_json
    
    if !fr['value'].nil?
      if !fr['value']['seqs'].nil?
      
        fr['value']['seqs'].each do |row|
          
          o =row.to_openstruct
          
          res += '<tr>'
          
          fr['columns'].each do |title|
            res += '<td>'
          
            #res += row[title['key']].to_s
            res += eval('o.'+title['key']).to_s
          
            res += '</td>'
          
          end
          
          
          res += '</tr>'
          
        end
      end
    end
    
    res += '</table>'
    
    res += "</td>"
    
    
    res += '</tr></table>'
    
    res_command += res
    elem['html_value'] = res
  end
  
  if fr['type']=='image'
    res = '<table><tr>'
    # resFiles += "<td>#{fr['type']}</td>"
    #res += "<td>&nbsp;</td>"
  
  
    # resFiles += '<td></td>'
    #res_command += image_tag
  #res_command += '<img src="/downloads/download_img/lima.png"></img>'
  
    
    #res += "<td>#{fr['value']}</td>"
    
    
    
    options = {}
    
    options[:border] = '0'
    
    if !fr['options'].blank?
      options = options.merge!(fr['options'])
    end
    
    img = image_tag(url_for(:controller => :downloads, :action=>:download_img, :id => fr['file_name']),options)
    
    if !['linked'].blank?
      
      img = link_to(img,url_for(:controller => :downloads, :action=>:download_img, :id => fr['file_name']))
    end
    
    res += '<td>'+img+"</td>"
    res += '</tr>'
    
    res +='<tr>'
    res += '<td align="center">'+fr['title']+'</td>'
    res += '</tr>'
    
    res += '</table>'
    
    res_command += res
    
    elem['html_value'] = res
  end
  
  
  #add element if necessary
  if !elem['id'].blank?
    if !elem['html_value'].blank?
      res_elems.push(elem)
    end
  end
  
end

res_html=res_files+res_files_values+res_command

if !res_elems.blank? and !final_results['template'].blank?
  res_html = final_results['template']
  
  res_elems.each do |e|
    res_html.gsub!('$'+e['id'].upcase,e['html_value'])
  end
end

# puts "res_elems:"+ res_elems.to_pretty_json

# TODO - Add unique identifiers to final_results
# TODO - Use uid to populate hash, and then a template string or file

# :controller => 'downloads', , :id => "#{fr['file']}"

# page['job_results_div'].replace_html('Showing: '+@job_id)

page['job_results_div'].replace_html(res_html)

